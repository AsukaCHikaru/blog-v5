{"pageProps":{"postContent":[{"type":"heading","children":[{"type":"plain","text":"TL;DR:"}],"depth":1},{"type":"list","ordered":false,"children":[{"type":"listItem","children":[{"type":"inlineCode","text":"fs.stat"},{"type":"plain","text":" for getting file size"}]},{"type":"listItem","children":[{"type":"inlineCode","text":"readline.clearLine"}]},{"type":"listItem","children":[{"type":"inlineCode","text":"readline.cursorTo(0)"}]},{"type":"listItem","children":[{"type":"inlineCode","text":"process.stdout.write"}]}]},{"type":"paragraph","children":[{"type":"plain","text":"Combine these 3 to update command line instead of printing new line"}]},{"type":"heading","children":[{"type":"plain","text":"Get file size"}],"depth":1},{"type":"paragraph","children":[{"type":"inlineCode","text":"fs.stat"},{"type":"plain","text":" returns an object contains several stats of the file from url you're downloading."}]},{"type":"paragraph","children":[{"type":"link","text":"Detailed explanation of fs.stat","url":"https://nodejs.org/api/fs.html#fs_class_fs_stats"},{"type":"plain","text":"."}]},{"type":"paragraph","children":[{"type":"plain","text":"Inside of the object, there is "},{"type":"inlineCode","text":"size"},{"type":"plain","text":" property, which is obviously the size of file, in bytes."}]},{"type":"code","lang":"js","text":"let fileSize = 0;\nfs.stat(\"url/to/your/file\", (stats) => {\n  fileSize = stats.size;\n});"},{"type":"heading","children":[{"type":"plain","text":"Get current progression"}],"depth":1},{"type":"paragraph","children":[{"type":"plain","text":"In the response from "},{"type":"inlineCode","text":"https.get"},{"type":"plain","text":" when downloading, track and add up the total length of chunks piped into "},{"type":"inlineCode","text":"fs.writeStream"},{"type":"plain","text":". This total length devided by file size is the download progression we need."}]},{"type":"heading","children":[{"type":"plain","text":"Write to terminal, but in same line"}],"depth":1},{"type":"paragraph","children":[{"type":"inlineCode","text":"console.log"},{"type":"plain","text":" "},{"type":"link","text":"implementation","url":"https://nodejs.org/docs/v0.3.1/api/process.html#process.stdout"},{"type":"plain","text":" in Node is actually based on "},{"type":"inlineCode","text":"process.stdout.write"},{"type":"plain","text":". But since there's a "},{"type":"inlineCode","text":"\\\\n"},{"type":"plain","text":" at end of every "},{"type":"inlineCode","text":"console.log"},{"type":"plain","text":", new line is printed everytime instead of being updated. Therefore we can't use "},{"type":"inlineCode","text":"console.log"}]},{"type":"paragraph","children":[{"type":"plain","text":"By combine "},{"type":"inlineCode","text":"readline.clearLine"},{"type":"plain","text":" and "},{"type":"inlineCode","text":"readline.cursorTo(0)"},{"type":"plain","text":", terminal will erase the last line of currently printed line, then move cursor to the starting position. Then we can use "},{"type":"inlineCode","text":"process.stdout.write"},{"type":"plain","text":" to print out current progress without "},{"type":"inlineCode","text":"\\\\n"},{"type":"plain","text":" in "},{"type":"inlineCode","text":"console.log"},{"type":"plain","text":" implementation that causes changing line."}]},{"type":"code","lang":"js","text":"let progress = 0;\nlet req = https.get(\"url/to/your/file\", (res, err) => {\n  res.on(\"data\", (chunk) => {\n    progress += chunk.length;\n    const dlPercentage = ((progress / fileSize) * 100).toFixed(2);\n    readline.clearLine();\n    readline.cursorTo(0);\n    process.stdout.write(`Downloading... ${dlPercentage}%`);\n  });\n});"}],"postMetadata":{"id":"download-progress-tool-in-terminal-using-nodejs","title":"Download Progress Tool in Terminal Using Node.JS","description":"","category":"note","topic":"programming","tags":[],"publishDate":"2019-06-07","pathname":"download-progress-tool-in-terminal-using-nodejs"},"last5posts":[{"id":"blogging-and-digital-gardening","title":"Blogging and Digital Gardening in the Social Platform and Generative AI Era","description":"I talk to myself about why bother writing at somewhere nobody comes.","category":"essay","topic":"life","tags":[],"publishDate":"2025-02-11","pathname":"blogging-and-digital-gardening"},{"id":"a-redemption-three-years-later","title":"A Redemption Three Years Later","description":"CD PROJEKT RED made a promise about Night City, which they broke. Three years later they had another attempt, and to me, it was their redemption.","category":"review","topic":"gaming","tags":[],"publishDate":"2025-01-13","pathname":"a-redemption-three-years-later"},{"id":"s14-recap","title":"S14 Recap","description":"I did not play a lot of league during 2024, but I had a few unforgettable moments nonetheless.","category":"retrospective","topic":"gaming","tags":[],"publishDate":"2025-01-07","pathname":"s14-recap"},{"id":"thoughts-on-building-a-game-with-xstate","title":"Thoughts on Building a Game with XState","description":"After hearing about XState's good reputation for years, I used it to build the prototype for my game. These are my thoughts.","category":"note","topic":"game development","tags":[],"publishDate":"2025-01-04","pathname":"thoughts-on-building-a-game-with-xstate"},{"id":"under-the-hood-diablo-ii-item-generation","title":"Under the Hood: Diablo II Item Generation","description":"A system design research turned into a reconciliation with a game I didn't know I was so in love with, so I wrote a research note to express my appreciation.","category":"research","topic":"game development","tags":[],"publishDate":"2024-11-08","pathname":"under-the-hood-diablo-ii-item-generation"}],"categoryPosts":[{"id":"thoughts-on-building-a-game-with-xstate","title":"Thoughts on Building a Game with XState","description":"After hearing about XState's good reputation for years, I used it to build the prototype for my game. These are my thoughts.","category":"note","topic":"game development","tags":[],"publishDate":"2025-01-04","pathname":"thoughts-on-building-a-game-with-xstate"},{"id":"godot-essentials","title":"Godot Essentials","description":"The biggest lessons I learned in my first Godot project.","category":"note","topic":"game development","tags":[],"publishDate":"2024-04-21","pathname":"godot-essentials"},{"id":"unity-dev-memo-2","title":"Unity Dev Memo (2)","description":"關於 Unity3D 內 raycast 的研究筆記。","category":"note","topic":"game development","tags":[],"publishDate":"2020-10-04","pathname":"unity-dev-memo-2"},{"id":"unity-dev-memo-1","title":"Unity Dev Memo (1)","description":"關於 Unity3D 物體移動，腳本執行順序以及 Hitbox 的筆記。","category":"note","topic":"game development","tags":[],"publishDate":"2020-03-08","pathname":"unity-dev-memo-1"},{"id":"a-rather-easy-way-to-implement-quicksort-in-js","title":"A Rather Easy Way to Implement Quicksort in JavaScript","description":"My attempt to implement quicksort.","category":"note","topic":"programming","tags":[],"publishDate":"2019-05-23","pathname":"a-rather-easy-way-to-implement-quicksort-in-js"}],"categories":[{"name":"essay","count":12},{"name":"review","count":15},{"name":"retrospective","count":15},{"name":"note","count":9},{"name":"research","count":3}]},"__N_SSG":true}